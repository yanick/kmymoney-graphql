/* tslint:disable */
import { GraphQLResolveInfo } from 'graphql';
/**
 * This file is auto-generated by graphql-schema-typescript
 * Please note that any changes in this file may be overwritten
 */


/*******************************
 *                             *
 *          TYPE DEFS          *
 *                             *
 *******************************/
export interface GQLQuery {
  accounts?: Array<GQLAccount | null>;
  account?: GQLAccount;
}

export interface GQLAccount {
  id?: string;
  fullname?: string;
}

/*********************************
 *                               *
 *         TYPE RESOLVERS        *
 *                               *
 *********************************/
/**
 * This interface define the shape of your resolver
 * Note that this type is designed to be compatible with graphql-tools resolvers
 * However, you can still use other generated interfaces to make your resolver type-safed
 */
export interface GQLResolver {
  Query?: GQLQueryTypeResolver;
  Account?: GQLAccountTypeResolver;
}
export interface GQLQueryTypeResolver<TParent = any> {
  accounts?: QueryToAccountsResolver<TParent>;
  account?: QueryToAccountResolver<TParent>;
}

export interface QueryToAccountsResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface QueryToAccountArgs {
  id: string;
}
export interface QueryToAccountResolver<TParent = any, TResult = any> {
  (parent: TParent, args: QueryToAccountArgs, context: any, info: GraphQLResolveInfo): TResult;
}

export interface GQLAccountTypeResolver<TParent = any> {
  id?: AccountToIdResolver<TParent>;
  fullname?: AccountToFullnameResolver<TParent>;
}

export interface AccountToIdResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}

export interface AccountToFullnameResolver<TParent = any, TResult = any> {
  (parent: TParent, args: {}, context: any, info: GraphQLResolveInfo): TResult;
}
